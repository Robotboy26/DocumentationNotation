		!Make your own x86 64-bit operating system!

Before we start if you want the source code used or extra resources you can find them here {github-link} # Highlight

	What I am using:

OS:
-ubuntu22.04

Tools:
-Git
-Qemu
-Nasm
-NeoVim # You can use whatever editor you want but I use NeoVim

	Command to install the tools used:

-
sudo apt install git qemu qemu-system-x86 nasm neovim
-

	Enviroment Setup (open up a terminal and run these commands to setup the enviroment):

-
cd
cd Downloads # Navigate to the directory where you would like the project
mkdir mOS # Or whatever you want to call the project
cd mOS
touch .gitignore
echo "src/bin" > .gitignore
mkdir src
cd src
mkdir bin # This will be for the compiled assembly files
touch mbr.asm # This will be the first part of the bootloader
touch bootloader.asm # This will be the second part the bootloader
touch os.asm # This file will be the payload for the bootloader
touch qemu.sh # This file will setup the virtual machine with you operating system
ls
-

	If everything worked you should see something like this (if you copy and pasted from above):

#-
{user}@{computerID}:~$ cd
cd Downloads # Navigate to the directory where you would like the project
mkdir mOS # Or whatever you want to call the project
cd mOS
touch .gitignore
echo "src/bin" > .gitignore
mkdir src
cd src
mkdir bin # This will be for the compiled assembly files
touch mbr.asm # This will be the first part of the bootloader
touch bootloader.asm # This will be the second part the bootloader
touch os.asm # This file will be the payload for the bootloader
touch qemu.sh # This file will setup the virtual machine with you operating system
ls
bin  bootloader.asm  mbr.asm  os.asm  qemu.sh
{user}@{computerID]:~/Downloads/mOS/src$
#-

	Now enter the qemu.sh file with your favorite editor:

#-
nvim qemu.sh
#-

	Using your favorite editor add this to the qemu.sh file:

!-- qemu.sh -
echo "started VM"

rm -r bin
mkdir bin

nasm mbr.asm -o bin/mbr.bin
nasm bootloader.asm -o bin/bootloader.bin
nasm os.asm -o bin/os.asm
sudo dd if=/dev/zero of=bin/disk.img count=8 bs=1048576
cat bin/bootloader.bin bin/os.bin > bin/mos.bin
sudo dd if=bin/mbr.bin of=bin/disk.img conv=notrunc
sudo dd if=bin/mos.bin of=bin/disk.img bs=512 seek=16 conv=notrunc
sudo qemu-system-x86_64 -drive format=raw,file=bin/disk.img
!--

